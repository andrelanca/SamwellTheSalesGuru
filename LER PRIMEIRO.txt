1- Para correr tudo como desenhei, abrir a pasta "SamwellBusinessMan" como projeto maven. e correr no terminal "mvn spring-boot:run"
   assim o servidor estará ligado e a api pronta a ser consumida no localhost:8080.
2- Para ver o front end do projeto abrir no browser a pasta "front end" que tem algumas das funcionalidades. 
Como por exemplo, ver a lista de orders (users.html) e adicionar clientes (index.html).

Todas as outras operações existem na api na parte do backend prontas para serem consumidas, tais como:


Popular a lista: (GET)
http://localhost:8080/populateListForTests

Aceder à lista de clientes: (GET)
http://localhost:8080/clients

Adicionar ClientOrders: (POST) (Um exemplo apenas, é necessário ir na query bookTitle, bookQuantity, bookPrice, clientName, clientPhoneNum, clientAddress)
http://localhost:8080/addClient?bookTitle=As%20Crônicas%20de%20Gelo%20e%20Fogo&bookQuantity=10&bookPrice=29.45&clientName=Andre%20Lanca&clientPhoneNum=968312552&clientAddress=Rua%20das%20Pratas
(Numa situação em que existiria um Front-End, estes campos seriam preenchidos num formulário)

Remover ClientOrders por ID de order: (DELETE)
http://localhost:8080/removeClient/(ID DA LISTA)

Enviar ao fornecedor a lista de encomendas: (GET)
http://localhost:8080/submitOrderList (faz redirect para a lista de encomendas que fiz)

Consultar lista de encomendas enviadas ao fornecedor: (GET)
http://localhost:8080/checkOrder


Para utilizar os diferentes HTTP Verbs, utilizei a ferramenta PostMan para verem tudo a acontecer.


--------

Se utilizarem o localhost:8080 terão uma experiência completa. 
Desde já desculpem não ter terminado as operações de remover clientes por ID, adicionar a encomenda e fornecer a lista do fornecedor.
